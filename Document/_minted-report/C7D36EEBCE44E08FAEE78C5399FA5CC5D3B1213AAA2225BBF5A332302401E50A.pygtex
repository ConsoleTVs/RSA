\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{functools} \PYG{k+kn}{import} \PYG{n+nb}{reduce}
\PYG{k+kn}{from} \PYG{n+nn}{RSACryptosystem.Key} \PYG{k+kn}{import} \PYG{n}{Key}

\PYG{k}{class} \PYG{n+nc}{RSA}\PYG{p}{:}

    \PYG{c+c1}{\PYGZsh{} Store the RSA key currently in use.}
    \PYG{n}{key} \PYG{o}{=} \PYG{n+nb+bp}{None}

    \PYG{k}{def} \PYG{n+nf}{\PYGZus{}\PYGZus{}fast\PYGZus{}modular\PYGZus{}exponentiation}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{a}\PYG{p}{,} \PYG{n}{z}\PYG{p}{,} \PYG{n}{n}\PYG{p}{):}
        \PYG{c+c1}{\PYGZsh{} Transform the exponent into binary (powers of 2).}
        \PYG{n}{binary} \PYG{o}{=} \PYG{n}{format}\PYG{p}{(}\PYG{n}{z}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}b\PYGZsq{}}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} Reverse the binary value of the exponent.}
        \PYG{n}{binary\PYGZus{}rev} \PYG{o}{=} \PYG{n}{binary}\PYG{p}{[::}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{]}
        \PYG{c+c1}{\PYGZsh{} Save the powers of 2 needed to later use}
        \PYG{n}{powers\PYGZus{}of\PYGZus{}two} \PYG{o}{=} \PYG{p}{[]}
        \PYG{c+c1}{\PYGZsh{} Add the power of 2\PYGZca{}i.}
        \PYG{k}{for} \PYG{n}{i}\PYG{p}{,}\PYG{n}{e} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n}{binary\PYGZus{}rev}\PYG{p}{):}
            \PYG{c+c1}{\PYGZsh{} Only add if the digit is 1. (1 \PYGZlt{}\PYGZlt{} i == 2**i)}
            \PYG{k}{if} \PYG{n}{e} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}1\PYGZsq{}}\PYG{p}{:} \PYG{n}{powers\PYGZus{}of\PYGZus{}two}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{i}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} Calculate mod C of the powers of two.}
        \PYG{n}{mod\PYGZus{}of\PYGZus{}powers}\PYG{p}{,} \PYG{n}{current\PYGZus{}exp} \PYG{o}{=} \PYG{p}{[],} \PYG{l+m+mi}{1}
        \PYG{k}{while} \PYG{n}{current\PYGZus{}exp} \PYG{o}{\PYGZlt{}=} \PYG{n}{powers\PYGZus{}of\PYGZus{}two}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{]:}
            \PYG{k}{if} \PYG{n}{current\PYGZus{}exp} \PYG{o+ow}{in} \PYG{n}{powers\PYGZus{}of\PYGZus{}two}\PYG{p}{:}
                \PYG{n}{mod\PYGZus{}of\PYGZus{}powers}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{a}\PYG{o}{**}\PYG{n}{current\PYGZus{}exp} \PYG{o}{\PYGZpc{}} \PYG{n}{n}\PYG{p}{)}
            \PYG{n}{current\PYGZus{}exp} \PYG{o}{*=} \PYG{l+m+mi}{2}
        \PYG{c+c1}{\PYGZsh{} We multiply the items in the list to get the result and do result mod n.}
        \PYG{k}{return} \PYG{n+nb}{reduce}\PYG{p}{(}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{,} \PYG{n}{y}\PYG{p}{:} \PYG{n}{x} \PYG{o}{*} \PYG{n}{y}\PYG{p}{,} \PYG{n}{mod\PYGZus{}of\PYGZus{}powers}\PYG{p}{)} \PYG{o}{\PYGZpc{}} \PYG{n}{n}

    \PYG{k}{def} \PYG{n+nf}{generate\PYGZus{}key}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{p} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{q} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key} \PYG{o}{=} \PYG{n}{Key}\PYG{p}{(}\PYG{n}{p}\PYG{p}{,} \PYG{n}{q}\PYG{p}{)}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key}

    \PYG{k}{def} \PYG{n+nf}{encrypt}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{plain\PYGZus{}text}\PYG{p}{,} \PYG{n}{e} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{n} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{):}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n}{e}\PYG{p}{:} \PYG{n}{e} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key}\PYG{o}{.}\PYG{n}{e}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n}{n}\PYG{p}{:} \PYG{n}{n} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key}\PYG{o}{.}\PYG{n}{n}
        \PYG{k}{if} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{plain\PYGZus{}text}\PYG{p}{,} \PYG{n+nb}{str}\PYG{p}{):}
            \PYG{n}{result} \PYG{o}{=} \PYG{p}{[]}
            \PYG{k}{for} \PYG{n}{letter} \PYG{o+ow}{in} \PYG{n}{plain\PYGZus{}text}\PYG{p}{:}
                \PYG{n}{result}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{encrypt}\PYG{p}{(}\PYG{n+nb}{ord}\PYG{p}{(}\PYG{n}{letter}\PYG{p}{),} \PYG{n}{e}\PYG{p}{,} \PYG{n}{n}\PYG{p}{))}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{result} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}\PYGZus{}fast\PYGZus{}modular\PYGZus{}exponentiation}\PYG{p}{(}
                \PYG{n}{plain\PYGZus{}text} \PYG{o}{\PYGZpc{}} \PYG{n}{n}\PYG{p}{,} \PYG{n}{e}\PYG{p}{,} \PYG{n}{n}
            \PYG{p}{)}
        \PYG{k}{return} \PYG{n}{result}

    \PYG{k}{def} \PYG{n+nf}{decrypt}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{cipher\PYGZus{}text}\PYG{p}{,} \PYG{n}{d} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{n} \PYG{o}{=} \PYG{n+nb+bp}{None}\PYG{p}{):}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n}{d}\PYG{p}{:} \PYG{n}{d} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key}\PYG{o}{.}\PYG{n}{d}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n}{n}\PYG{p}{:} \PYG{n}{n} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{key}\PYG{o}{.}\PYG{n}{n}
        \PYG{k}{if} \PYG{n+nb}{isinstance}\PYG{p}{(}\PYG{n}{cipher\PYGZus{}text}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{):}
            \PYG{n}{result} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}
            \PYG{k}{for} \PYG{n}{element} \PYG{o+ow}{in} \PYG{n}{cipher\PYGZus{}text}\PYG{p}{:}
                \PYG{n}{result} \PYG{o}{+=} \PYG{n+nb}{chr}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{decrypt}\PYG{p}{(}\PYG{n}{element}\PYG{p}{,} \PYG{n}{d}\PYG{p}{,} \PYG{n}{n}\PYG{p}{))}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{result} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}\PYGZus{}fast\PYGZus{}modular\PYGZus{}exponentiation}\PYG{p}{(}
                \PYG{n}{cipher\PYGZus{}text}\PYG{p}{,} \PYG{n}{d}\PYG{p}{,} \PYG{n}{n}
            \PYG{p}{)}
        \PYG{k}{return} \PYG{n}{result}
\end{Verbatim}
